global.CONNECT_TO_SOCKET_SERVER=CONNECT_TO_SOCKET_SERVER=METHOD({run:function(n,e){"use strict";var o=e.host,r=e.port,t=require("net"),c=t.connect({host:o,port:r},function(){console.log("client connected"),c.write("world!\r\n")});c.on("data",function(n){console.log(n.toString()),c.end()}),c.on("end",function(){console.log("client disconnected")})}}),global.SHA1=SHA1=METHOD({run:function(n,e){"use strict";var o=e.key,r=e.password,t=require("crypto");return t.createHmac("sha1",o).update(r).digest("hex")}}),global.CLUSTERING=CLUSTERING=METHOD({run:function(n,e){"use strict";var o=require("cluster");RUN(o.isMaster?function(){var n=function(){var n=o.fork();n.on("message",function(e){EACH(o.workers,function(o){o!==n&&o.send(e)})})};REPEAT(require("os").cpus().length,function(){n()}),o.on("exit",function(e,o,r){console.log("[UPPERCASE.JS-CLUSTERING] WORKER #"+e.id+" (PID:"+e.process.pid+") died. ("+(void 0!==r?r:o)+"). restarting..."),n()})}:function(){var n={};process.on("message",function(e){var o=e.methodName,r=e.data,t=n[o];void 0!==t&&t(r)}),e({id:o.worker.id,pid:o.worker.process.pid},function(n){process.send(n)},function(e,o){n[e]=o})})}}),global.SOCKET_SERVER=SOCKET_SERVER=METHOD({run:function(n,e,o){"use strict";var r=require("net"),t=r.createServer(function(n){console.log("server connected"),n.on("end",function(){console.log("server disconnected")}),n.write("hello\r\n"),o(function(){},function(n){receivers.push(n)}),n.pipe(n)});t.listen(e)}}),global.WEB_SERVER=WEB_SERVER=METHOD({run:function(){"use strict"}});