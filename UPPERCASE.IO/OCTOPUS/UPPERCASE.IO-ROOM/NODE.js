global.CONNECT_TO_ROOM_SERVER=CONNECT_TO_ROOM_SERVER=METHOD({run:function(o,O){"use strict";CONNECT_TO_SOCKET_SERVER(o,{error:O,success:function(){}})}}),global.LAUNCH_ROOM_SERVER=LAUNCH_ROOM_SERVER=METHOD(function(o){"use strict";var O,R={};return o.addRoomInitFunc=O=function(o,O){void 0===R[o]&&(R[o]=[]),R[o].push(O)},{run:function(o){broadcast=function(o){var O,R,n,_;void 0!==o&&(O=o.boxName,R=o.roomName,n=o.methodName,_=o.data,BOX.getBoxes()[O].BROADCAST({roomName:R,methodName:n,data:_}))},MULTI_PROTOCOL_SOCKET_SERVER(o,function(o,O){O("__ENTER_ROOM",function(){}),O("__EXIT_ROOM",function(){}),O("__DISCONNECTED",function(){})}),void 0!==CPU_CLUSTERING.on&&CPU_CLUSTERING.on("__ROOMS_BROADCAST",broadcast),void 0!==SERVER_CLUSTERING.on&&SERVER_CLUSTERING.on("__ROOMS_BROADCAST",function(o){broadcast(o),void 0!==CPU_CLUSTERING.broadcast&&CPU_CLUSTERING.broadcast({methodName:"__ROOMS_BROADCAST",data:o})})}}}),FOR_BOX(function(o){"use strict";o.ROOM=METHOD({run:function(O,R){LAUNCH_ROOM_SERVER.addRoomInitFunc(o.boxName+"/"+O,function(O){R(O,function(){},function(){o.BROADCAST({roomName:roomName,methodName:methodName,data:data})})})}})});